services:
    Doctrine\Common\Annotations\Reader:
        class: Doctrine\Common\Annotations\AnnotationReader

    PHPSharkTank\Anonymizer\Handler\FakerHandler:
        arguments:
            - '@Faker\Generator'
            - 'faker'

    PHPSharkTank\Anonymizer\Loader\LoaderInterface: '@PHPSharkTank\Anonymizer\Loader\CachingLoader'

    PHPSharkTank\Anonymizer\Loader\AnnotationLoader:
        arguments:
            - '@Doctrine\Common\Annotations\Reader'

    PHPSharkTank\Anonymizer\Loader\CachingLoader:
        decorates: 'PHPSharkTank\Anonymizer\Loader\AnnotationLoader'
        arguments:
            - '@PHPSharkTank\Anonymizer\Loader\CachingLoader.inner'
            - '@Psr\Cache\CacheItemPoolInterface'

    PHPSharkTank\Anonymizer\Handler\CallbackHandler:
        tags:
            - { name: 'phpsharktank.anonymizer.handler' }

    PHPSharkTank\Anonymizer\Handler\NullHandler:
        tags:
            - { name: 'phpsharktank.anonymizer.handler' }

    PHPSharkTank\Anonymizer\Registry\HandlerRegistry:
        $handlers: !tagged phpsharktank.anonymizer.handler

    PHPSharkTank\Anonymizer\Registry\FakerHandlerRegistry:
        arguments:
            - '@Faker\Generator'

    PHPSharkTank\Anonymizer\Registry\ChainHandlerRegistry:
        bind:
            $registries:
                - '@PHPSharkTank\Anonymizer\Registry\FakerHandlerRegistry'
                - '@PHPSharkTank\Anonymizer\Registry\HandlerRegistry'

    PHPSharkTank\Anonymizer\Visitor\GraphNavigator:
        arguments:
            - '@PHPSharkTank\Anonymizer\Loader\LoaderInterface'
            - '@PHPSharkTank\Anonymizer\Registry\ChainHandlerRegistry'
            - '@Symfony\Contracts\EventDispatcher\EventDispatcherInterface'

    PHPSharkTank\Anonymizer\Anonymizer:
        arguments:
            - '@PHPSharkTank\Anonymizer\Visitor\GraphNavigator'

    PHPSharkTank\Anonymizer\AnonymizerInterface: '@PHPSharkTank\Anonymizer\Anonymizer'

    PHPSharkTank\Anonymizer\EventSubscriber\LifecycleCallbackSubscriber:
        arguments:
            - '@PHPSharkTank\Anonymizer\Loader\LoaderInterface'
        tags:
            - { name: kernel.event_listener, event: PHPSharkTank\Anonymizer\Event\PreAnonymizeEvent, method: 'onPreAnonymize', priority: 1000}
            - { name: kernel.event_listener, event: PHPSharkTank\Anonymizer\Event\PostAnonymizeEvent, method: 'onPostAnonymize', priority: -1000}
